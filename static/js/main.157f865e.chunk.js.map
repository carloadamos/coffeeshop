{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["renderCallToAction","message","className","App","alt","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"uOAwCA,SAASA,EAAmBC,GAC1B,OACE,yBAAKC,UAAU,eACb,yBAAKA,UAAU,cACb,2BAAID,KAiFGE,MA1Hf,WACE,OACE,yBAAKD,UAAU,OACb,yBAAKA,UAAU,YA4GjB,yBAAKA,UAAU,cACb,4BACE,oCACA,wCACA,sCACA,4CA7FJ,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,aAAb,gCACA,6GAGJ,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,aAAaE,IAAI,aAzB/BJ,EAAmB,yBAuExB,yBAAKE,UAAU,eACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,aAAb,WAEF,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,oBACb,yBAAKG,GAAG,SAASH,UAAU,eAAeE,IAAI,oBAC9C,uBAAGF,UAAU,aAAb,gBACA,uBAAGA,UAAU,mBAAb,0HAGJ,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,oBACb,yBAAKG,GAAG,SAASH,UAAU,eAAeE,IAAI,oBAC9C,uBAAGF,UAAU,aAAb,gBACA,uBAAGA,UAAU,mBAAb,wFAGJ,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,oBACb,yBAAKG,GAAG,WAAWH,UAAU,eAAeE,IAAI,oBAChD,uBAAGF,UAAU,aAAb,mBACA,uBAAGA,UAAU,mBAAb,kFAILF,EAAmB,2BAvDtB,yBAAKE,UAAU,iBACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,aAAb,aAEF,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,iDACb,yBAAKG,GAAG,kBAAkBD,IAAI,sBAEhC,yBAAKF,UAAU,iDACb,yBAAKG,GAAG,kBAAkBD,IAAI,uBAGlC,yBAAKF,UAAU,4BACb,yBAAKA,UAAU,mDACb,yBAAKG,GAAG,oBAAoBD,IAAI,sBAElC,yBAAKF,UAAU,kDACb,yBAAKG,GAAG,mBAAmBD,IAAI,yBAzDrC,yBAAKF,UAAU,mBACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,aAAb,eAEF,yBAAKA,UAAU,uBCLHI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMtB,c","file":"static/js/main.157f865e.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"top-page\">\n        {renderNavigation()}\n        {renderCenterSquare()}\n        {renderCallToAction('CHECK OUT OUR DRINKS')}\n      </div>\n      {renderDrinksPage()}\n      {renderDessertsPage()}\n      <div className=\"contact-us-page\">\n        <div className=\"section-title\">\n          <p className=\"hero-text\">CONTACT US</p>\n        </div>\n        <div className=\"contact-content\">\n        </div>\n      </div>\n    </div >\n  );\n}\n\nfunction renderCenterSquare() {\n  return (\n    <div className=\"center-square\">\n      <div className=\"center-left\">\n        <div className=\"center-left-text\">\n          <p className=\"hero-text\">Only the finest coffee beans</p>\n          <span>We serve the best coffee beans imported from the best farms in the world.</span>\n        </div>\n      </div>\n      <div className=\"center-right\">\n        <img className=\"hero-image\" alt=\"Coffee\" />\n      </div>\n    </div>\n  );\n}\n\nfunction renderCallToAction(message) {\n  return (\n    <div className=\"cta-wrapper\">\n      <div className=\"cta-button\">\n        <p>{message}</p>\n      </div>\n    </div>\n  );\n}\n\nfunction renderDessertsPage() {\n  return (\n    <div className=\"desserts-page\">\n      <div className=\"section-title\">\n        <p className=\"hero-text\">DESSERTS</p>\n      </div>\n      <div className=\"desserts-content\">\n        <div className=\"desserts-content__column\">\n          <div className=\"desserts-content__row layout__dessert-img-one\">\n            <img id=\"dessert-img-one\" alt=\"featured-dessert\"></img>\n          </div>\n          <div className=\"desserts-content__row layout__dessert-img-two\">\n            <img id=\"dessert-img-two\" alt=\"featured-dessert\"></img>\n          </div>\n        </div>\n        <div className=\"desserts-content__column\">\n          <div className=\"desserts-content__row layout__dessert-img-three\">\n            <img id=\"dessert-img-three\" alt=\"featured-dessert\"></img>\n          </div>\n          <div className=\"desserts-content__row layout__dessert-img-four\">\n            <img id=\"dessert-img-four\" alt=\"featured-dessert\"></img>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction renderDrinksPage() {\n  return (\n    <div className=\"drinks-page\">\n      <div className=\"section-title\">\n        <p className=\"hero-text\">DRINKS</p>\n      </div>\n      <div className=\"drinks-content\">\n        <div className=\"card featured-coffee\">\n          <div className=\"featured-content\">\n            <img id=\"imgOne\" className=\"featured-img\" alt=\"Featured Coffee\"></img>\n            <p className=\"img-title\">Caffee Latte</p>\n            <p className=\"img-description\">Dark rich espresso with the right amount of milk and foam on top. This drink will take away your worries and stress.</p>\n          </div>\n        </div>\n        <div className=\"card featured-coffee\">\n          <div className=\"featured-content\">\n            <img id=\"imgTwo\" className=\"featured-img\" alt=\"Featured Coffee\"></img>\n            <p className=\"img-title\">Caffee Mocha</p>\n            <p className=\"img-description\">Rich full bodied espresso with mocha sauce, steamed milk and whipped cream on top.</p>\n          </div>\n        </div>\n        <div className=\"card featured-coffee\">\n          <div className=\"featured-content\">\n            <img id=\"imgThree\" className=\"featured-img\" alt=\"Featured Coffee\"></img>\n            <p className=\"img-title\">Caffe Americano</p>\n            <p className=\"img-description\">Similar strength to traditional brewed coffee but gives a different flavor.</p>\n          </div>\n        </div>\n      </div>\n      {renderCallToAction('CHECK OUT OUR DESSERTS')}\n    </div>\n  );\n}\n\nfunction renderNavigation() {\n  return (\n    <div className=\"navigation\">\n      <ul>\n        <li>MENU</li>\n        <li>DESSERTS</li>\n        <li>DRINKS</li>\n        <li>CONTACT US</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}